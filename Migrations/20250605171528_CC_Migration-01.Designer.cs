// <auto-generated />
using System;
using CC_API.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CC_API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250605171528_CC_Migration-01")]
    partial class CC_Migration01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CC_API.Domain.Entities.Copy.Copy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("CopyCost")
                        .HasColumnType("double");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_copy", (string)null);
                });

            modelBuilder.Entity("CC_API.Domain.Entities.Printers.Printer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ImplementationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<int>("Patrimony")
                        .HasColumnType("int");

                    b.Property<Guid>("PrinterTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("WithdrawallDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PrinterTypeId");

                    b.ToTable("tbl_printer", (string)null);
                });

            modelBuilder.Entity("CC_API.Domain.Entities.Printers.PrinterType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<double>("RentalValue")
                        .HasColumnType("double");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_printerType", (string)null);
                });

            modelBuilder.Entity("CC_API.Domain.Entities.Statements.Statement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Cpb")
                        .HasColumnType("int");

                    b.Property<double>("Cpp")
                        .HasColumnType("double");

                    b.Property<double>("Gt")
                        .HasColumnType("double");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Pb")
                        .HasColumnType("int");

                    b.Property<int>("Ppb")
                        .HasColumnType("int");

                    b.Property<Guid>("PrinterId")
                        .HasColumnType("char(36)");

                    b.Property<double>("Pt")
                        .HasColumnType("double");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrinterId");

                    b.ToTable("tbl_statement", (string)null);
                });

            modelBuilder.Entity("CC_API.Domain.Entities.Printers.Printer", b =>
                {
                    b.HasOne("CC_API.Domain.Entities.Printers.PrinterType", "PrinterType")
                        .WithMany()
                        .HasForeignKey("PrinterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrinterType");
                });

            modelBuilder.Entity("CC_API.Domain.Entities.Statements.Statement", b =>
                {
                    b.HasOne("CC_API.Domain.Entities.Printers.Printer", "Printer")
                        .WithMany()
                        .HasForeignKey("PrinterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Printer");
                });
#pragma warning restore 612, 618
        }
    }
}
